let BASE_ROUTE = '/api/vulnerability/';
import { ClientInstance } from '@redhat-cloud-services/frontend-components-inventory-vulnerabilities';
import { DefaultApi } from '@redhat-cloud-services/vulnerabilities-client';
import { constructParameters } from './MiscHelper';

const api = new DefaultApi(undefined, BASE_ROUTE, ClientInstance);

export function getCveDetails(synopsis) {
    const result = api.getCveDetails(synopsis);
    return result;
}

export function getAffectedSystemsByCVE(synopsis, apiProps) {
    let parameterNames = ['filter', 'limit', 'offset', 'page', 'page_size', 'sort', 'status_id', 'data_format'];
    let parameterArray = constructParameters(apiProps, parameterNames);
    let result = api.getAffectedSystemsByCve(synopsis, ...parameterArray);
    return result;
}

export function getSystems(apiProps) {
    let parameterNames = ['filter', 'limit', 'offset', 'page', 'page_size', 'sort', 'data_format', 'opt_out'];
    let parameterArray = constructParameters(apiProps, parameterNames);
    let result = api.getSystemsList(...parameterArray);
    return result;
}

export function getCveListByAccount(apiProps) {
    let parameterNames = [
        'filter',
        'limit',
        'offset',
        'page',
        'page_size',
        'sort',
        'cvss_from',
        'cvss_to',
        'public_from',
        'public_to',
        'severity',
        'data_format',
        'show_all'
    ];
    let parameterArray = constructParameters(apiProps, parameterNames);
    let result = api.getCveList(...parameterArray);
    return result;
}

export function fetchStatusList() {
    let result = api.getStatusList();
    return result;
}
