import some from 'lodash/some';
import propTypes from 'prop-types';
import React from 'react';
import { Redirect, Route, Switch, withRouter } from 'react-router-dom';
import asyncComponent from '../../../Utilities/asyncComponent';
import { paths } from '../../../Utilities/Routes';

const VulnerabilitiesCVEs = asyncComponent(() =>
    import(/* webpackChunkName: "VulnerabilitiesCVEs" */ '../VulnerabilitiesCVEs/VulnerabilitiesCVEs')
);
const CVEPage = asyncComponent(() => import(/* webpackChunkName: "CVEPage" */ '../CVEPage/CVEPage'));

const Systems = asyncComponent(() => import(/* webpackChunkName: "Systems" */ '../Systems/Systems'));
const InventoryDetail = asyncComponent(() =>
    import(/* webpackChunkName: "InventoryDetail" */ '../InventoryDetail/InventoryDetail')
);

class Vulnerabilities extends React.Component {
    constructor(props) {
        super(props);
    }

    render() {
        const { props } = this;

        let path = props.location.pathname;
        return (
            <React.Fragment>
                <Switch>
                    <Route exact path={paths.vulnerabilitiesCves} component={VulnerabilitiesCVEs} />
                    <Route exact path={paths.systems} component={Systems} />
                    <Route path={paths.inventoryDetail} component={InventoryDetail} />
                    <Route exact path={paths.cvePage} component={CVEPage} />

                    <Redirect from={paths.cvepagePath} to={paths.inventoryDetail} />
                    <Route render={() => (some(paths, p => p === path) ? null : <Redirect to={paths.vulnerabilitiesCves} />)} />
                </Switch>
            </React.Fragment>
        );
    }
}

Vulnerabilities.propTypes = {
    location: propTypes.object.isRequired
};

export default withRouter(Vulnerabilities);
