import propTypes from 'prop-types';
import React from 'react';
import { connect } from 'react-redux';
import { withRouter } from 'react-router-dom';
import { dispatchAction } from '../../../Helpers/Dispatcher';
import { setHeader } from '../../../Store/Actions/Actions';
import { paths } from '../../../Utilities/Routes';
import CVEs from '../CVEs/CVEs';

class SystemDetail extends React.Component {
    constructor(props) {
        super(props);
    }

    render() {
        this.props.setHeader({
            breadcrumbs: [
                { title: 'Vulnerability', to: paths.vulnerabilities },
                { title: 'Systems', to: paths.systems },
                { title: this.props.hostname, isActive: true }
            ]
        });
        return (
            <React.Fragment>
                <CVEs entity={this.props.affectedSystemId} />
            </React.Fragment>
        );
    }
}

SystemDetail.propTypes = {
    setHeader: propTypes.func,
    hostname: propTypes.string,
    affectedSystemId: propTypes.string
};

const mapDispatchToProps = () => {
    return {
        setHeader: header => dispatchAction(setHeader(header))
    };
};

function mapStateToProps(state) {
    return {
        affectedSystemId: state.entityDetails.entity.id,
        hostname: state.entityDetails.entity.display_name
    };
}

export default withRouter(
    connect(
        mapStateToProps,
        mapDispatchToProps
    )(SystemDetail)
);
