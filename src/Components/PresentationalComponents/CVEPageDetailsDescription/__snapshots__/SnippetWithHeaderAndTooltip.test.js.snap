// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SnippetWithHeaderAndTooltip Should render with title and label and Tooltip 1`] = `
<SnippetWithHeaderAndPopover
  title="testTitle"
  tooltipText="Some random text"
  value="testDescription"
>
  <Popover
    appendTo={[Function]}
    aria-label="Business risk popover"
    boundary="window"
    className=""
    closeBtnAriaLabel="Close"
    distance={25}
    enableFlip={true}
    flipBehavior={
      Array [
        "top",
        "right",
        "bottom",
        "left",
        "top",
        "right",
        "bottom",
      ]
    }
    footerContent={null}
    headerContent=""
    hideOnOutsideClick={true}
    isVisible={null}
    maxWidth="calc(2rem + 18.75rem)"
    onHidden={[Function]}
    onHide={[Function]}
    onMount={[Function]}
    onShow={[Function]}
    onShown={[Function]}
    position="right"
    shouldClose={[Function]}
    tippyProps={Object {}}
    zIndex={9999}
  >
    <PopoverBase
      animateFill={false}
      appendTo={[Function]}
      arrow={true}
      boundary="window"
      content={
        <GenerateId
          prefix="pf-random-id-"
        >
          [Function]
        </GenerateId>
      }
      distance={25}
      flip={true}
      flipBehavior={
        Array [
          "top",
          "right",
          "bottom",
          "left",
          "top",
          "right",
          "bottom",
        ]
      }
      hideOnClick={true}
      interactive={true}
      interactiveBorder={0}
      isVisible={null}
      lazy={true}
      maxWidth="calc(2rem + 18.75rem)"
      onCreate={[Function]}
      onHidden={[Function]}
      onHide={[Function]}
      onMount={[Function]}
      onShow={[Function]}
      onShown={[Function]}
      performance={true}
      placement="right"
      popperOptions={
        Object {
          "modifiers": Object {
            "hide": Object {
              "enabled": true,
            },
            "preventOverflow": Object {
              "enabled": true,
            },
          },
        }
      }
      theme="pf-popover"
      trigger="click"
      zIndex={9999}
    >
      <Stack
        style={
          Object {
            "cursor": "pointer",
            "display": "inline-block",
          }
        }
      >
        <div
          className="pf-l-stack"
          style={
            Object {
              "cursor": "pointer",
              "display": "inline-block",
            }
          }
        >
          <StackItem>
            <div
              className="pf-l-stack__item"
            >
              <Label>
                <span
                  className="vuln-label"
                >
                  testTitle
                </span>
              </Label>
            </div>
          </StackItem>
          <StackItem>
            <div
              className="pf-l-stack__item"
            >
              testDescription
            </div>
          </StackItem>
        </div>
      </Stack>
      <Portal
        containerInfo={
          <div>
            <div>
              <div
                aria-describedby="popover-pf-random-id-2-body"
                aria-label="Business risk popover"
                aria-modal="true"
                class=""
                role="dialog"
              >
                <div
                  class="pf-c-popover__content"
                >
                  <button
                    aria-label="Close"
                    class="pf-c-button pf-m-plain"
                    style="pointer-events: auto;"
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 352 512"
                      width="1em"
                    >
                      <path
                        d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                        transform=""
                      />
                    </svg>
                  </button>
                  
                  <div
                    class="pf-c-popover__body"
                    id="popover-pf-random-id-2-body"
                  />
                </div>
              </div>
            </div>
          </div>
        }
      >
        <GenerateId
          prefix="pf-random-id-"
        >
          <FocusTrap
            _createFocusTrap={[Function]}
            active={false}
            focusTrapOptions={
              Object {
                "clickOutsideDeactivates": true,
              }
            }
            paused={false}
            tag="div"
          >
            <div>
              <div
                aria-describedby="popover-pf-random-id-2-body"
                aria-label="Business risk popover"
                aria-modal="true"
                className=""
                role="dialog"
              >
                <PopoverContent>
                  <div
                    className="pf-c-popover__content"
                  >
                    <PopoverCloseButton
                      aria-label="Close"
                      onClose={[Function]}
                    >
                      <Component
                        aria-label="Close"
                        onClick={[Function]}
                        style={
                          Object {
                            "pointerEvents": "auto",
                          }
                        }
                        variant="plain"
                      >
                        <ComponentWithOuia
                          component={[Function]}
                          componentProps={
                            Object {
                              "aria-label": "Close",
                              "children": <TimesIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                                title={null}
                              />,
                              "onClick": [Function],
                              "style": Object {
                                "pointerEvents": "auto",
                              },
                              "variant": "plain",
                            }
                          }
                          consumerContext={null}
                        >
                          <Button
                            aria-label="Close"
                            onClick={[Function]}
                            ouiaContext={
                              Object {
                                "isOuia": false,
                                "ouiaId": null,
                              }
                            }
                            style={
                              Object {
                                "pointerEvents": "auto",
                              }
                            }
                            variant="plain"
                          >
                            <button
                              aria-disabled={null}
                              aria-label="Close"
                              className="pf-c-button pf-m-plain"
                              disabled={false}
                              onClick={[Function]}
                              style={
                                Object {
                                  "pointerEvents": "auto",
                                }
                              }
                              tabIndex={null}
                              type="button"
                            >
                              <TimesIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                                title={null}
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 352 512"
                                  width="1em"
                                >
                                  <path
                                    d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                    transform=""
                                  />
                                </svg>
                              </TimesIcon>
                            </button>
                          </Button>
                        </ComponentWithOuia>
                      </Component>
                    </PopoverCloseButton>
                    <PopoverBody
                      id="popover-pf-random-id-2-body"
                    >
                      <div
                        className="pf-c-popover__body"
                        id="popover-pf-random-id-2-body"
                      />
                    </PopoverBody>
                  </div>
                </PopoverContent>
              </div>
            </div>
          </FocusTrap>
        </GenerateId>
      </Portal>
    </PopoverBase>
  </Popover>
</SnippetWithHeaderAndPopover>
`;

exports[`SnippetWithHeaderAndTooltip Should render with title and label only 1`] = `
<SnippetWithHeaderAndPopover
  title="testTitle"
  value="testDescription"
>
  <Popover
    appendTo={[Function]}
    aria-label="Business risk popover"
    boundary="window"
    className=""
    closeBtnAriaLabel="Close"
    distance={25}
    enableFlip={true}
    flipBehavior={
      Array [
        "top",
        "right",
        "bottom",
        "left",
        "top",
        "right",
        "bottom",
      ]
    }
    footerContent={null}
    headerContent=""
    hideOnOutsideClick={true}
    isVisible={null}
    maxWidth="calc(2rem + 18.75rem)"
    onHidden={[Function]}
    onHide={[Function]}
    onMount={[Function]}
    onShow={[Function]}
    onShown={[Function]}
    position="right"
    shouldClose={[Function]}
    tippyProps={Object {}}
    zIndex={9999}
  >
    <PopoverBase
      animateFill={false}
      appendTo={[Function]}
      arrow={true}
      boundary="window"
      content={
        <GenerateId
          prefix="pf-random-id-"
        >
          [Function]
        </GenerateId>
      }
      distance={25}
      flip={true}
      flipBehavior={
        Array [
          "top",
          "right",
          "bottom",
          "left",
          "top",
          "right",
          "bottom",
        ]
      }
      hideOnClick={true}
      interactive={true}
      interactiveBorder={0}
      isVisible={null}
      lazy={true}
      maxWidth="calc(2rem + 18.75rem)"
      onCreate={[Function]}
      onHidden={[Function]}
      onHide={[Function]}
      onMount={[Function]}
      onShow={[Function]}
      onShown={[Function]}
      performance={true}
      placement="right"
      popperOptions={
        Object {
          "modifiers": Object {
            "hide": Object {
              "enabled": true,
            },
            "preventOverflow": Object {
              "enabled": true,
            },
          },
        }
      }
      theme="pf-popover"
      trigger="click"
      zIndex={9999}
    >
      <Stack
        style={
          Object {
            "cursor": "pointer",
            "display": "inline-block",
          }
        }
      >
        <div
          className="pf-l-stack"
          style={
            Object {
              "cursor": "pointer",
              "display": "inline-block",
            }
          }
        >
          <StackItem>
            <div
              className="pf-l-stack__item"
            >
              <Label>
                <span
                  className="vuln-label"
                >
                  testTitle
                </span>
              </Label>
            </div>
          </StackItem>
          <StackItem>
            <div
              className="pf-l-stack__item"
            >
              testDescription
            </div>
          </StackItem>
        </div>
      </Stack>
      <Portal
        containerInfo={
          <div>
            <div>
              <div
                aria-describedby="popover-pf-random-id-1-body"
                aria-label="Business risk popover"
                aria-modal="true"
                class=""
                role="dialog"
              >
                <div
                  class="pf-c-popover__content"
                >
                  <button
                    aria-label="Close"
                    class="pf-c-button pf-m-plain"
                    style="pointer-events: auto;"
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 352 512"
                      width="1em"
                    >
                      <path
                        d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                        transform=""
                      />
                    </svg>
                  </button>
                  
                  <div
                    class="pf-c-popover__body"
                    id="popover-pf-random-id-1-body"
                  />
                </div>
              </div>
            </div>
          </div>
        }
      >
        <GenerateId
          prefix="pf-random-id-"
        >
          <FocusTrap
            _createFocusTrap={[Function]}
            active={false}
            focusTrapOptions={
              Object {
                "clickOutsideDeactivates": true,
              }
            }
            paused={false}
            tag="div"
          >
            <div>
              <div
                aria-describedby="popover-pf-random-id-1-body"
                aria-label="Business risk popover"
                aria-modal="true"
                className=""
                role="dialog"
              >
                <PopoverContent>
                  <div
                    className="pf-c-popover__content"
                  >
                    <PopoverCloseButton
                      aria-label="Close"
                      onClose={[Function]}
                    >
                      <Component
                        aria-label="Close"
                        onClick={[Function]}
                        style={
                          Object {
                            "pointerEvents": "auto",
                          }
                        }
                        variant="plain"
                      >
                        <ComponentWithOuia
                          component={[Function]}
                          componentProps={
                            Object {
                              "aria-label": "Close",
                              "children": <TimesIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                                title={null}
                              />,
                              "onClick": [Function],
                              "style": Object {
                                "pointerEvents": "auto",
                              },
                              "variant": "plain",
                            }
                          }
                          consumerContext={null}
                        >
                          <Button
                            aria-label="Close"
                            onClick={[Function]}
                            ouiaContext={
                              Object {
                                "isOuia": false,
                                "ouiaId": null,
                              }
                            }
                            style={
                              Object {
                                "pointerEvents": "auto",
                              }
                            }
                            variant="plain"
                          >
                            <button
                              aria-disabled={null}
                              aria-label="Close"
                              className="pf-c-button pf-m-plain"
                              disabled={false}
                              onClick={[Function]}
                              style={
                                Object {
                                  "pointerEvents": "auto",
                                }
                              }
                              tabIndex={null}
                              type="button"
                            >
                              <TimesIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                                title={null}
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 352 512"
                                  width="1em"
                                >
                                  <path
                                    d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                    transform=""
                                  />
                                </svg>
                              </TimesIcon>
                            </button>
                          </Button>
                        </ComponentWithOuia>
                      </Component>
                    </PopoverCloseButton>
                    <PopoverBody
                      id="popover-pf-random-id-1-body"
                    >
                      <div
                        className="pf-c-popover__body"
                        id="popover-pf-random-id-1-body"
                      />
                    </PopoverBody>
                  </div>
                </PopoverContent>
              </div>
            </div>
          </FocusTrap>
        </GenerateId>
      </Portal>
    </PopoverBase>
  </Popover>
</SnippetWithHeaderAndPopover>
`;

exports[`SnippetWithHeaderAndTooltip Should render without params 1`] = `
<SnippetWithHeaderAndPopover>
  <Popover
    appendTo={[Function]}
    aria-label="Business risk popover"
    boundary="window"
    className=""
    closeBtnAriaLabel="Close"
    distance={25}
    enableFlip={true}
    flipBehavior={
      Array [
        "top",
        "right",
        "bottom",
        "left",
        "top",
        "right",
        "bottom",
      ]
    }
    footerContent={null}
    headerContent=""
    hideOnOutsideClick={true}
    isVisible={null}
    maxWidth="calc(2rem + 18.75rem)"
    onHidden={[Function]}
    onHide={[Function]}
    onMount={[Function]}
    onShow={[Function]}
    onShown={[Function]}
    position="right"
    shouldClose={[Function]}
    tippyProps={Object {}}
    zIndex={9999}
  >
    <PopoverBase
      animateFill={false}
      appendTo={[Function]}
      arrow={true}
      boundary="window"
      content={
        <GenerateId
          prefix="pf-random-id-"
        >
          [Function]
        </GenerateId>
      }
      distance={25}
      flip={true}
      flipBehavior={
        Array [
          "top",
          "right",
          "bottom",
          "left",
          "top",
          "right",
          "bottom",
        ]
      }
      hideOnClick={true}
      interactive={true}
      interactiveBorder={0}
      isVisible={null}
      lazy={true}
      maxWidth="calc(2rem + 18.75rem)"
      onCreate={[Function]}
      onHidden={[Function]}
      onHide={[Function]}
      onMount={[Function]}
      onShow={[Function]}
      onShown={[Function]}
      performance={true}
      placement="right"
      popperOptions={
        Object {
          "modifiers": Object {
            "hide": Object {
              "enabled": true,
            },
            "preventOverflow": Object {
              "enabled": true,
            },
          },
        }
      }
      theme="pf-popover"
      trigger="click"
      zIndex={9999}
    >
      <Stack
        style={
          Object {
            "cursor": "pointer",
            "display": "inline-block",
          }
        }
      >
        <div
          className="pf-l-stack"
          style={
            Object {
              "cursor": "pointer",
              "display": "inline-block",
            }
          }
        >
          <StackItem>
            <div
              className="pf-l-stack__item"
            >
              <Label>
                <span
                  className="vuln-label"
                />
              </Label>
            </div>
          </StackItem>
          <StackItem>
            <div
              className="pf-l-stack__item"
            />
          </StackItem>
        </div>
      </Stack>
      <Portal
        containerInfo={
          <div>
            <div>
              <div
                aria-describedby="popover-pf-random-id-0-body"
                aria-label="Business risk popover"
                aria-modal="true"
                class=""
                role="dialog"
              >
                <div
                  class="pf-c-popover__content"
                >
                  <button
                    aria-label="Close"
                    class="pf-c-button pf-m-plain"
                    style="pointer-events: auto;"
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 352 512"
                      width="1em"
                    >
                      <path
                        d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                        transform=""
                      />
                    </svg>
                  </button>
                  
                  <div
                    class="pf-c-popover__body"
                    id="popover-pf-random-id-0-body"
                  />
                </div>
              </div>
            </div>
          </div>
        }
      >
        <GenerateId
          prefix="pf-random-id-"
        >
          <FocusTrap
            _createFocusTrap={[Function]}
            active={false}
            focusTrapOptions={
              Object {
                "clickOutsideDeactivates": true,
              }
            }
            paused={false}
            tag="div"
          >
            <div>
              <div
                aria-describedby="popover-pf-random-id-0-body"
                aria-label="Business risk popover"
                aria-modal="true"
                className=""
                role="dialog"
              >
                <PopoverContent>
                  <div
                    className="pf-c-popover__content"
                  >
                    <PopoverCloseButton
                      aria-label="Close"
                      onClose={[Function]}
                    >
                      <Component
                        aria-label="Close"
                        onClick={[Function]}
                        style={
                          Object {
                            "pointerEvents": "auto",
                          }
                        }
                        variant="plain"
                      >
                        <ComponentWithOuia
                          component={[Function]}
                          componentProps={
                            Object {
                              "aria-label": "Close",
                              "children": <TimesIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                                title={null}
                              />,
                              "onClick": [Function],
                              "style": Object {
                                "pointerEvents": "auto",
                              },
                              "variant": "plain",
                            }
                          }
                          consumerContext={null}
                        >
                          <Button
                            aria-label="Close"
                            onClick={[Function]}
                            ouiaContext={
                              Object {
                                "isOuia": false,
                                "ouiaId": null,
                              }
                            }
                            style={
                              Object {
                                "pointerEvents": "auto",
                              }
                            }
                            variant="plain"
                          >
                            <button
                              aria-disabled={null}
                              aria-label="Close"
                              className="pf-c-button pf-m-plain"
                              disabled={false}
                              onClick={[Function]}
                              style={
                                Object {
                                  "pointerEvents": "auto",
                                }
                              }
                              tabIndex={null}
                              type="button"
                            >
                              <TimesIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                                title={null}
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 352 512"
                                  width="1em"
                                >
                                  <path
                                    d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                    transform=""
                                  />
                                </svg>
                              </TimesIcon>
                            </button>
                          </Button>
                        </ComponentWithOuia>
                      </Component>
                    </PopoverCloseButton>
                    <PopoverBody
                      id="popover-pf-random-id-0-body"
                    >
                      <div
                        className="pf-c-popover__body"
                        id="popover-pf-random-id-0-body"
                      />
                    </PopoverBody>
                  </div>
                </PopoverContent>
              </div>
            </div>
          </FocusTrap>
        </GenerateId>
      </Portal>
    </PopoverBase>
  </Popover>
</SnippetWithHeaderAndPopover>
`;
