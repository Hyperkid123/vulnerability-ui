import { Stack, StackItem, Text, TextContent, TextVariants, Flex, FlexItem } from '@patternfly/react-core';
import { ExclamationTriangleIcon } from '@patternfly/react-icons';
import { PatternFlyThemeProvider, StyledText, StyledConstants } from '@patternfly/react-styled-system';
import { Table, TableBody, TableHeader } from '@patternfly/react-table';
import propTypes from 'prop-types';
import React from 'react';
import { STATUS_OPTIONS } from '../../../Helpers/constants';
import './CVEPageDetailsDescription.scss';
import { SnippetWithHeaderAndPopover } from './SnippetWithHeaderAndTooltip';

const CVEPageDetailsDescription = ({ cveAttributes }) => {
    const {
        public_date: publishDate,
        description,
        rh_link: link,
        business_risk: businessRisk,
        business_risk_justification: businessRiskJustification,
        status,
        status_justification: statusJustification,
        systems_status_detail: systemsStatusDetail,
        systems_status_divergent: systemsStatusDivergent
    } = cveAttributes;

    const detailRows =
        systemsStatusDetail &&
        Object.keys(systemsStatusDetail).map(item => [
            STATUS_OPTIONS.find(status => status.value === item.toString()).label,
            systemsStatusDetail[item].toString()
        ]);

    const brPopoverContent = (
        <TextContent>
            <Stack>
                <StackItem>
                    <StyledText
                        fontWeight={StyledConstants.fontWeights.bold}
                        fontSize={StyledConstants.fontSizes.sm}
                        lineHeight={StyledConstants.lineHeights.sm}
                    >
                        Justification note
                    </StyledText>
                </StackItem>
                <StackItem>{businessRiskJustification || '--'}</StackItem>
            </Stack>
        </TextContent>
    );

    const statusPopoverContent = (
        <Stack>
            <StackItem>
                <StyledText
                    fontWeight={StyledConstants.fontWeights.bold}
                    fontSize={StyledConstants.fontSizes.sm}
                    lineHeight={StyledConstants.lineHeights.sm}
                >
                    CVE Status
                </StyledText>
                {status || '--'}

                <StyledText
                    fontWeight={StyledConstants.fontWeights.bold}
                    fontSize={StyledConstants.fontSizes.sm}
                    lineHeight={StyledConstants.lineHeights.sm}
                    style={{ marginTop: 'var(--pf-global--spacer--sm)' }}
                >
                    Justification note
                </StyledText>
                {statusJustification || '--'}
            </StackItem>
            {systemsStatusDivergent > 0 && (
                <StackItem>
                    <TextContent>
                        <hr className={'splitter'} />
                    </TextContent>
                    <StyledText fontWeight={StyledConstants.fontWeights.semi_bold} lineHeight={StyledConstants.lineHeights.sm}>
                        Systems with this CVE
                    </StyledText>
                    <Table
                        aria-label={'Status details'}
                        borders={false}
                        gridBreakPoint={null}
                        cells={['Status', 'Count']}
                        rows={detailRows}
                        className={'status-breakdown-table'}
                    >
                        <TableHeader />
                        <TableBody />
                    </Table>
                </StackItem>
            )}
        </Stack>
    );
    return (
        <React.Fragment>
            <Stack gutter="sm">
                <StackItem />
                <StackItem>
                    <PatternFlyThemeProvider>
                        <Flex>
                            <FlexItem breakpointMods={[{ modifier: 'spacer-xl' }]}>
                                <SnippetWithHeaderAndPopover
                                    title={'Business risk'}
                                    value={businessRisk}
                                    content={brPopoverContent}
                                />
                            </FlexItem>
                            <FlexItem breakpointMods={[{ modifier: 'spacer-xl' }]}>
                                <SnippetWithHeaderAndPopover
                                    title={'Status'}
                                    content={statusPopoverContent}
                                    value={
                                        <span>
                                            {systemsStatusDivergent > 0 && (
                                                <ExclamationTriangleIcon color={'var(--pf-global--warning-color--100)'} />
                                            )}{' '}
                                            {status}
                                        </span>
                                    }
                                />
                            </FlexItem>
                        </Flex>
                    </PatternFlyThemeProvider>
                </StackItem>
                <StackItem>
                    <TextContent>
                        <Text component={TextVariants.p}>{description}</Text>
                    </TextContent>
                </StackItem>
                <StackItem>
                    <TextContent>
                        <Text component={TextVariants.p}>Publish date: {publishDate}</Text>
                        <Text component={TextVariants.p}>{link}</Text>
                    </TextContent>
                </StackItem>
            </Stack>
        </React.Fragment>
    );
};

CVEPageDetailsDescription.propTypes = {
    cveAttributes: propTypes.any
};

export default CVEPageDetailsDescription;
